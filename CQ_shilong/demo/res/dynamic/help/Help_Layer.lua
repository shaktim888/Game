--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 0, g = 0, b = 0})
panel:setBackGroundColorOpacity(153)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(14)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
panel:setAnchorPoint(0.5000, 0.5000)
panel:setPosition(640.0000, 364.0320)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5056)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setTopMargin(-4.0320)
layout:setBottomMargin(4.0320)
Layer:addChild(panel)

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("common/pop_bg/bg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(15)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.5289)
layout:setPercentHeight(0.6167)
layout:setSize({width = 677.0000, height = 444.0000})
layout:setLeftMargin(301.5000)
layout:setRightMargin(301.5000)
layout:setTopMargin(138.0000)
layout:setBottomMargin(138.0000)
panel:addChild(bg)

--Create img_text_rule
local img_text_rule = ccui.ImageView:create()
img_text_rule:ignoreContentAdaptWithSize(false)
img_text_rule:loadTexture("common/pop_bg/notice_text.png",0)
img_text_rule:setLayoutComponentEnabled(true)
img_text_rule:setName("img_text_rule")
img_text_rule:setTag(16)
img_text_rule:setCascadeColorEnabled(true)
img_text_rule:setCascadeOpacityEnabled(true)
img_text_rule:setPosition(331.0000, 364.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_text_rule)
layout:setPositionPercentX(0.4889)
layout:setPositionPercentY(0.8198)
layout:setPercentWidth(0.1448)
layout:setPercentHeight(0.1216)
layout:setSize({width = 98.0000, height = 54.0000})
layout:setLeftMargin(282.0000)
layout:setRightMargin(297.0000)
layout:setTopMargin(53.0000)
layout:setBottomMargin(337.0000)
bg:addChild(img_text_rule)

--Create scrollView_rule
local scrollView_rule = ccui.ScrollView:create()
scrollView_rule:setInnerContainerSize({width = 560, height = 360})
scrollView_rule:ignoreContentAdaptWithSize(false)
scrollView_rule:setClippingEnabled(true)
scrollView_rule:setBackGroundColorOpacity(51)
scrollView_rule:setLayoutComponentEnabled(true)
scrollView_rule:setName("scrollView_rule")
scrollView_rule:setTag(17)
scrollView_rule:setCascadeColorEnabled(true)
scrollView_rule:setCascadeOpacityEnabled(true)
scrollView_rule:setPosition(86.0000, 53.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(scrollView_rule)
layout:setPositionPercentX(0.1270)
layout:setPositionPercentY(0.1194)
layout:setPercentWidth(0.7386)
layout:setPercentHeight(0.6306)
layout:setSize({width = 500.0000, height = 280.0000})
layout:setLeftMargin(86.0000)
layout:setRightMargin(91.0000)
layout:setTopMargin(111.0000)
layout:setBottomMargin(53.0000)
bg:addChild(scrollView_rule)

--Create text_rule
local text_rule = ccui.Text:create()
text_rule:ignoreContentAdaptWithSize(false)
text_rule:setFontName("common/font/font.ttf")
text_rule:setFontSize(28)
text_rule:setString([[暂无新公告发布
]])
text_rule:setLayoutComponentEnabled(true)
text_rule:setName("text_rule")
text_rule:setTag(18)
text_rule:setCascadeColorEnabled(true)
text_rule:setCascadeOpacityEnabled(true)
text_rule:setAnchorPoint(0.0000, 1.0000)
text_rule:setPosition(0.0000, 359.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(text_rule)
layout:setPositionPercentY(0.9972)
layout:setPercentWidth(0.8929)
layout:setPercentHeight(0.8333)
layout:setSize({width = 500.0000, height = 300.0000})
layout:setRightMargin(60.0000)
layout:setTopMargin(1.0000)
layout:setBottomMargin(59.0000)
scrollView_rule:addChild(text_rule)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

