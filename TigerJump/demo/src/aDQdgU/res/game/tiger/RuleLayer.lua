--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setBackGroundImage("game/tiger/image/zhezhao.png",0)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorOpacity(97)
Panel_1:setTouchEnabled(true);
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(9)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
Panel_1:setPosition(0.0000, 0.0001)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setTopMargin(-0.0001)
layout:setBottomMargin(0.0001)
Layer:addChild(Panel_1)

--Create Image_2
local Image_2 = ccui.ImageView:create()
Image_2:ignoreContentAdaptWithSize(false)
Image_2:loadTexture("game/tiger/image/window.png",0)
Image_2:setLayoutComponentEnabled(true)
Image_2:setName("Image_2")
Image_2:setTag(21)
Image_2:setCascadeColorEnabled(true)
Image_2:setCascadeOpacityEnabled(true)
Image_2:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_2)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.7047)
layout:setPercentHeight(0.7847)
layout:setSize({width = 902.0000, height = 565.0000})
layout:setLeftMargin(189.0000)
layout:setRightMargin(189.0000)
layout:setTopMargin(77.5000)
layout:setBottomMargin(77.5000)
Panel_1:addChild(Image_2)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(true)
Text_1:setTextAreaSize({width = 0, height = 0})
Text_1:setFontName("game/tiger/image/nvpk.ttf")
Text_1:setFontSize(36)
Text_1:setString([[长按屏幕，松开时老虎跳跃
，老虎根据你按住屏幕的时间
决定跳跃的距离，老虎必须跳
跃到下一根柱子上才能继续游
戏，否则游戏结束]])
Text_1:setTextHorizontalAlignment(1)
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("Text_1")
Text_1:setTag(10)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setPosition(640.0000, 360.0000)
Text_1:setScaleY(1.3130)
Text_1:setTextColor({r = 173, g = 216, b = 230})
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.3688)
layout:setPercentHeight(0.2986)
layout:setSize({width = 472.0000, height = 215.0000})
layout:setLeftMargin(404.0000)
layout:setRightMargin(404.0000)
layout:setTopMargin(252.5000)
layout:setBottomMargin(252.5000)
Panel_1:addChild(Text_1)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

