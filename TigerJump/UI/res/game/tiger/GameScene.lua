--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game/tiger/image/bg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(7)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.6667)
layout:setPositionPercentY(0.5625)
layout:setPercentWidth(1.3333)
layout:setPercentHeight(1.1250)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setRightMargin(-320.0000)
layout:setTopMargin(-80.0000)
Scene:addChild(bg)

--Create fenshu
local fenshu = ccui.Text:create()
fenshu:ignoreContentAdaptWithSize(true)
fenshu:setTextAreaSize({width = 0, height = 0})
fenshu:setFontSize(72)
fenshu:setString([[0]])
fenshu:setLayoutComponentEnabled(true)
fenshu:setName("fenshu")
fenshu:setTag(27)
fenshu:setCascadeColorEnabled(true)
fenshu:setCascadeOpacityEnabled(true)
fenshu:setPosition(100.0000, 650.0000)
fenshu:setTextColor({r = 255, g = 165, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(fenshu)
layout:setPositionPercentX(0.1042)
layout:setPositionPercentY(1.0156)
layout:setPercentWidth(0.0427)
layout:setPercentHeight(0.1266)
layout:setSize({width = 41.0000, height = 81.0000})
layout:setLeftMargin(79.5000)
layout:setRightMargin(839.5000)
layout:setTopMargin(-50.5000)
layout:setBottomMargin(609.5000)
Scene:addChild(fenshu)

--Create Daoju_Panel
local Daoju_Panel = ccui.Layout:create()
Daoju_Panel:ignoreContentAdaptWithSize(false)
Daoju_Panel:setClippingEnabled(false)
Daoju_Panel:setBackGroundColorOpacity(102)
Daoju_Panel:setTouchEnabled(true);
Daoju_Panel:setLayoutComponentEnabled(true)
Daoju_Panel:setName("Daoju_Panel")
Daoju_Panel:setTag(17)
Daoju_Panel:setCascadeColorEnabled(true)
Daoju_Panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Daoju_Panel)
layout:setPercentWidth(1.3333)
layout:setPercentHeight(1.1250)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setRightMargin(-320.0000)
layout:setTopMargin(-80.0000)
Scene:addChild(Daoju_Panel)

--Create Tiger_Panel
local Tiger_Panel = ccui.Layout:create()
Tiger_Panel:ignoreContentAdaptWithSize(false)
Tiger_Panel:setClippingEnabled(false)
Tiger_Panel:setBackGroundColorOpacity(102)
Tiger_Panel:setTouchEnabled(true);
Tiger_Panel:setLayoutComponentEnabled(true)
Tiger_Panel:setName("Tiger_Panel")
Tiger_Panel:setTag(9)
Tiger_Panel:setCascadeColorEnabled(true)
Tiger_Panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Tiger_Panel)
layout:setPercentWidth(1.3333)
layout:setPercentHeight(1.1250)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setRightMargin(-320.0000)
layout:setTopMargin(-80.0000)
Scene:addChild(Tiger_Panel)

--Create tiger
local tiger = ccui.ImageView:create()
tiger:ignoreContentAdaptWithSize(false)
tiger:loadTexture("game/tiger/image/tiger.png",0)
tiger:setLayoutComponentEnabled(true)
tiger:setName("tiger")
tiger:setTag(10)
tiger:setCascadeColorEnabled(true)
tiger:setCascadeOpacityEnabled(true)
tiger:setPosition(340.0000, 365.0000)
tiger:setScaleX(0.4000)
tiger:setScaleY(0.4000)
layout = ccui.LayoutComponent:bindLayoutComponent(tiger)
layout:setPositionPercentX(0.3542)
layout:setPositionPercentY(0.5703)
layout:setPercentWidth(0.3396)
layout:setPercentHeight(0.4375)
layout:setSize({width = 326.0000, height = 280.0000})
layout:setLeftMargin(177.0000)
layout:setRightMargin(457.0000)
layout:setTopMargin(135.0000)
layout:setBottomMargin(225.0000)
Scene:addChild(tiger)

--Create back
local back = ccui.Button:create()
back:ignoreContentAdaptWithSize(false)
back:loadTextureNormal("game/tiger/image/back.png",0)
back:loadTexturePressed("game/tiger/image/back.png",0)
back:loadTextureDisabled("Default/Button_Disable.png",0)
back:setTitleFontSize(14)
back:setTitleColor({r = 65, g = 65, b = 70})
back:setLayoutComponentEnabled(true)
back:setName("back")
back:setTag(16)
back:setCascadeColorEnabled(true)
back:setCascadeOpacityEnabled(true)
back:setPosition(1129.6910, 651.9996)
layout = ccui.LayoutComponent:bindLayoutComponent(back)
layout:setPositionPercentX(1.1768)
layout:setPositionPercentY(1.0187)
layout:setPercentWidth(0.2708)
layout:setPercentHeight(0.1328)
layout:setSize({width = 260.0000, height = 85.0000})
layout:setLeftMargin(999.6909)
layout:setRightMargin(-299.6909)
layout:setTopMargin(-54.4996)
layout:setBottomMargin(609.4996)
Scene:addChild(back)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

