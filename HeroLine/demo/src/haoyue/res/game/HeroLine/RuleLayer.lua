--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create shade
local shade = ccui.Layout:create()
shade:ignoreContentAdaptWithSize(false)
shade:setClippingEnabled(false)
shade:setBackGroundColorOpacity(102)
shade:setTouchEnabled(true);
shade:setLayoutComponentEnabled(true)
shade:setName("shade")
shade:setTag(93)
shade:setCascadeColorEnabled(true)
shade:setCascadeOpacityEnabled(true)
shade:setAnchorPoint(0.5000, 0.5000)
shade:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(shade)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Layer:addChild(shade)

--Create TopPanel
local TopPanel = ccui.Layout:create()
TopPanel:ignoreContentAdaptWithSize(false)
TopPanel:setClippingEnabled(false)
TopPanel:setBackGroundColorOpacity(102)
TopPanel:setTouchEnabled(true);
TopPanel:setLayoutComponentEnabled(true)
TopPanel:setName("TopPanel")
TopPanel:setTag(78)
TopPanel:setCascadeColorEnabled(true)
TopPanel:setCascadeOpacityEnabled(true)
TopPanel:setAnchorPoint(0.5000, 0.5000)
TopPanel:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(TopPanel)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.4727)
layout:setPercentHeight(0.5972)
layout:setSize({width = 605.0000, height = 430.0000})
layout:setLeftMargin(337.5000)
layout:setRightMargin(337.5000)
layout:setTopMargin(145.0000)
layout:setBottomMargin(145.0000)
Layer:addChild(TopPanel)

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game/HeroLine/image/popbg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(80)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(302.5000, 215.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.9785)
layout:setPercentHeight(1.1279)
layout:setSize({width = 592.0000, height = 485.0000})
layout:setLeftMargin(6.5000)
layout:setRightMargin(6.5000)
layout:setTopMargin(-27.5000)
layout:setBottomMargin(-27.5000)
TopPanel:addChild(bg)

--Create ruleScrollView
local ruleScrollView = ccui.ScrollView:create()
ruleScrollView:setBounceEnabled(true)
ruleScrollView:setInnerContainerSize({width = 490, height = 370})
ruleScrollView:ignoreContentAdaptWithSize(false)
ruleScrollView:setClippingEnabled(true)
ruleScrollView:setBackGroundColorOpacity(102)
ruleScrollView:setLayoutComponentEnabled(true)
ruleScrollView:setName("ruleScrollView")
ruleScrollView:setTag(115)
ruleScrollView:setCascadeColorEnabled(true)
ruleScrollView:setCascadeOpacityEnabled(true)
ruleScrollView:setPosition(57.8316, 36.4559)
layout = ccui.LayoutComponent:bindLayoutComponent(ruleScrollView)
layout:setPositionPercentX(0.0956)
layout:setPositionPercentY(0.0848)
layout:setPercentWidth(0.8099)
layout:setPercentHeight(0.8140)
layout:setSize({width = 490.0000, height = 350.0000})
layout:setLeftMargin(57.8316)
layout:setRightMargin(57.1684)
layout:setTopMargin(43.5441)
layout:setBottomMargin(36.4559)
TopPanel:addChild(ruleScrollView)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(false)
Text_1:setFontName("game/HeroLine/image/nvpk.ttf")
Text_1:setFontSize(30)
Text_1:setString([[Select the hero to slide and connect the same heroes. Connect as many heroes as possible. The more heroes, the more points you will get.

]])
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("Text_1")
Text_1:setTag(116)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setPosition(236.9303, 202.1228)
Text_1:setTextColor({r = 0, g = 128, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.4835)
layout:setPositionPercentY(0.5463)
layout:setPercentWidth(0.9592)
layout:setPercentHeight(0.6000)
layout:setSize({width = 470.0000, height = 300.0000})
layout:setLeftMargin(1.9303)
layout:setRightMargin(18.0697)
layout:setTopMargin(17.8772)
layout:setBottomMargin(52.1228)
ruleScrollView:addChild(Text_1)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

