--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game/tiger/image/bg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(7)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Scene:addChild(bg)

--Create fenshu
local fenshu = ccui.Text:create()
fenshu:ignoreContentAdaptWithSize(true)
fenshu:setTextAreaSize({width = 0, height = 0})
fenshu:setFontName("game/tiger/image/nvpk.ttf")
fenshu:setFontSize(72)
fenshu:setString([[0]])
fenshu:setLayoutComponentEnabled(true)
fenshu:setName("fenshu")
fenshu:setTag(27)
fenshu:setCascadeColorEnabled(true)
fenshu:setCascadeOpacityEnabled(true)
fenshu:setAnchorPoint(0.0000, 0.5000)
fenshu:setPosition(43.5000, 371.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(fenshu)
layout:setPositionPercentX(0.0340)
layout:setPositionPercentY(0.5153)
layout:setPercentWidth(0.0320)
layout:setPercentHeight(0.1208)
layout:setSize({width = 41.0000, height = 87.0000})
layout:setLeftMargin(43.5000)
layout:setRightMargin(1195.5000)
layout:setTopMargin(305.5000)
layout:setBottomMargin(327.5000)
Scene:addChild(fenshu)

--Create Daoju_Panel
local Daoju_Panel = ccui.Layout:create()
Daoju_Panel:ignoreContentAdaptWithSize(false)
Daoju_Panel:setClippingEnabled(false)
Daoju_Panel:setBackGroundColorOpacity(102)
Daoju_Panel:setTouchEnabled(true);
Daoju_Panel:setLayoutComponentEnabled(true)
Daoju_Panel:setName("Daoju_Panel")
Daoju_Panel:setTag(17)
Daoju_Panel:setCascadeColorEnabled(true)
Daoju_Panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Daoju_Panel)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Scene:addChild(Daoju_Panel)

--Create Tiger_Panel
local Tiger_Panel = ccui.Layout:create()
Tiger_Panel:ignoreContentAdaptWithSize(false)
Tiger_Panel:setClippingEnabled(false)
Tiger_Panel:setBackGroundColorOpacity(102)
Tiger_Panel:setTouchEnabled(true);
Tiger_Panel:setLayoutComponentEnabled(true)
Tiger_Panel:setName("Tiger_Panel")
Tiger_Panel:setTag(9)
Tiger_Panel:setCascadeColorEnabled(true)
Tiger_Panel:setCascadeOpacityEnabled(true)
Tiger_Panel:setPosition(-1.0000, -1.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Tiger_Panel)
layout:setPositionPercentX(-0.0008)
layout:setPositionPercentY(-0.0014)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setLeftMargin(-1.0000)
layout:setRightMargin(1.0000)
layout:setTopMargin(1.0000)
layout:setBottomMargin(-1.0000)
Scene:addChild(Tiger_Panel)

--Create tiger
local tiger = ccui.ImageView:create()
tiger:ignoreContentAdaptWithSize(false)
tiger:loadTexture("game/tiger/image/tiger_1.png",0)
tiger:setLayoutComponentEnabled(true)
tiger:setName("tiger")
tiger:setTag(10)
tiger:setCascadeColorEnabled(true)
tiger:setCascadeOpacityEnabled(true)
tiger:setPosition(263.2655, 242.8000)
layout = ccui.LayoutComponent:bindLayoutComponent(tiger)
layout:setPositionPercentX(0.2057)
layout:setPositionPercentY(0.3372)
layout:setPercentWidth(0.1297)
layout:setPercentHeight(0.1319)
layout:setSize({width = 166.0000, height = 95.0000})
layout:setLeftMargin(180.2655)
layout:setRightMargin(933.7345)
layout:setTopMargin(429.7000)
layout:setBottomMargin(195.3000)
Scene:addChild(tiger)

--Create Text_4
local Text_4 = ccui.Text:create()
Text_4:ignoreContentAdaptWithSize(true)
Text_4:setTextAreaSize({width = 0, height = 0})
Text_4:setFontName("game/tiger/image/nvpk.ttf")
Text_4:setFontSize(48)
Text_4:setString([[得分超过200分开启此功能]])
Text_4:setLayoutComponentEnabled(true)
Text_4:setName("Text_4")
Text_4:setTag(72)
Text_4:setCascadeColorEnabled(true)
Text_4:setCascadeOpacityEnabled(true)
Text_4:setVisible(false)
Text_4:setPosition(644.8982, 358.3675)
Text_4:setTextColor({r = 77, g = 77, b = 77})
layout = ccui.LayoutComponent:bindLayoutComponent(Text_4)
layout:setPositionPercentX(0.5038)
layout:setPositionPercentY(0.4977)
layout:setPercentWidth(0.4391)
layout:setPercentHeight(0.0806)
layout:setSize({width = 562.0000, height = 58.0000})
layout:setLeftMargin(363.8982)
layout:setRightMargin(354.1018)
layout:setTopMargin(332.6325)
layout:setBottomMargin(329.3675)
Scene:addChild(Text_4)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

