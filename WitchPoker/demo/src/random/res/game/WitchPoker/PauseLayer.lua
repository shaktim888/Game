--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create shade
local shade = ccui.Layout:create()
shade:ignoreContentAdaptWithSize(false)
shade:setClippingEnabled(false)
shade:setBackGroundColorOpacity(102)
shade:setTouchEnabled(true);
shade:setLayoutComponentEnabled(true)
shade:setName("shade")
shade:setTag(43)
shade:setCascadeColorEnabled(true)
shade:setCascadeOpacityEnabled(true)
shade:setAnchorPoint(0.5000, 0.5000)
shade:setPosition(617.8492, 370.5795)
layout = ccui.LayoutComponent:bindLayoutComponent(shade)
layout:setPositionPercentX(0.4827)
layout:setPositionPercentY(0.5147)
layout:setPercentWidth(1.5625)
layout:setPercentHeight(2.0833)
layout:setSize({width = 2000.0000, height = 1500.0000})
layout:setLeftMargin(-382.1508)
layout:setRightMargin(-337.8491)
layout:setTopMargin(-400.5795)
layout:setBottomMargin(-379.4205)
Layer:addChild(shade)

--Create TopPanel
local TopPanel = ccui.Layout:create()
TopPanel:ignoreContentAdaptWithSize(false)
TopPanel:setClippingEnabled(false)
TopPanel:setBackGroundColorType(1)
TopPanel:setBackGroundColor({r = 77, g = 77, b = 77})
TopPanel:setBackGroundColorOpacity(102)
TopPanel:setTouchEnabled(true);
TopPanel:setLayoutComponentEnabled(true)
TopPanel:setName("TopPanel")
TopPanel:setTag(44)
TopPanel:setCascadeColorEnabled(true)
TopPanel:setCascadeOpacityEnabled(true)
TopPanel:setAnchorPoint(0.5000, 0.5000)
TopPanel:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(TopPanel)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Layer:addChild(TopPanel)

--Create continueBtn
local continueBtn = ccui.Button:create()
continueBtn:ignoreContentAdaptWithSize(false)
continueBtn:loadTextureNormal("game/WitchPoker/image/ui2/fanhuiBtn.png",0)
continueBtn:setTitleFontSize(14)
continueBtn:setTitleColor({r = 65, g = 65, b = 70})
continueBtn:setLayoutComponentEnabled(true)
continueBtn:setName("continueBtn")
continueBtn:setTag(45)
continueBtn:setCascadeColorEnabled(true)
continueBtn:setCascadeOpacityEnabled(true)
continueBtn:setPosition(1168.6400, 605.4480)
layout = ccui.LayoutComponent:bindLayoutComponent(continueBtn)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.9130)
layout:setPositionPercentY(0.8409)
layout:setPercentWidth(0.1172)
layout:setPercentHeight(0.2083)
layout:setSize({width = 150.0000, height = 150.0000})
layout:setLeftMargin(1093.6400)
layout:setRightMargin(36.3600)
layout:setTopMargin(39.5520)
layout:setBottomMargin(530.4480)
TopPanel:addChild(continueBtn)

--Create restartBtn
local restartBtn = ccui.Button:create()
restartBtn:ignoreContentAdaptWithSize(false)
restartBtn:loadTextureNormal("game/WitchPoker/image/ui2/refreshBtn.png",0)
restartBtn:setTitleFontSize(14)
restartBtn:setTitleColor({r = 65, g = 65, b = 70})
restartBtn:setLayoutComponentEnabled(true)
restartBtn:setName("restartBtn")
restartBtn:setTag(46)
restartBtn:setCascadeColorEnabled(true)
restartBtn:setCascadeOpacityEnabled(true)
restartBtn:setPosition(530.9440, 350.4960)
layout = ccui.LayoutComponent:bindLayoutComponent(restartBtn)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.4148)
layout:setPositionPercentY(0.4868)
layout:setPercentWidth(0.1172)
layout:setPercentHeight(0.2083)
layout:setSize({width = 150.0000, height = 150.0000})
layout:setLeftMargin(455.9440)
layout:setRightMargin(674.0560)
layout:setTopMargin(294.5040)
layout:setBottomMargin(275.4960)
TopPanel:addChild(restartBtn)

--Create exitBtn
local exitBtn = ccui.Button:create()
exitBtn:ignoreContentAdaptWithSize(false)
exitBtn:loadTextureNormal("game/WitchPoker/image/ui2/exitBtn.png",0)
exitBtn:setTitleFontSize(14)
exitBtn:setTitleColor({r = 65, g = 65, b = 70})
exitBtn:setLayoutComponentEnabled(true)
exitBtn:setName("exitBtn")
exitBtn:setTag(47)
exitBtn:setCascadeColorEnabled(true)
exitBtn:setCascadeOpacityEnabled(true)
exitBtn:setPosition(759.0400, 350.4960)
layout = ccui.LayoutComponent:bindLayoutComponent(exitBtn)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5930)
layout:setPositionPercentY(0.4868)
layout:setPercentWidth(0.1172)
layout:setPercentHeight(0.2083)
layout:setSize({width = 150.0000, height = 150.0000})
layout:setLeftMargin(684.0400)
layout:setRightMargin(445.9600)
layout:setTopMargin(294.5040)
layout:setBottomMargin(275.4960)
TopPanel:addChild(exitBtn)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

