--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 1280.0000})

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game/niuniutiaozhan/images/bg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(2)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(360.0000, 640.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 720.0000, height = 1280.0000})
Layer:addChild(bg)

--Create role
local role = ccui.ImageView:create()
role:ignoreContentAdaptWithSize(false)
role:loadTexture("game/niuniutiaozhan/images/role.png",0)
role:setLayoutComponentEnabled(true)
role:setName("role")
role:setTag(74)
role:setCascadeColorEnabled(true)
role:setCascadeOpacityEnabled(true)
role:setPosition(360.0000, 900.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(role)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.7031)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.4688)
layout:setSize({width = 720.0000, height = 600.0000})
layout:setTopMargin(80.0000)
layout:setBottomMargin(600.0000)
Layer:addChild(role)

--Create basemodel
local basemodel = ccui.Button:create()
basemodel:ignoreContentAdaptWithSize(false)
basemodel:loadTextureNormal("game/niuniutiaozhan/images/btns/basemodel.png",0)
basemodel:setTitleFontSize(14)
basemodel:setTitleColor({r = 65, g = 65, b = 70})
basemodel:setScale9Enabled(true)
basemodel:setCapInsets({x = 15, y = 11, width = 383, height = 125})
basemodel:setLayoutComponentEnabled(true)
basemodel:setName("basemodel")
basemodel:setTag(5)
basemodel:setCascadeColorEnabled(true)
basemodel:setCascadeOpacityEnabled(true)
basemodel:setPosition(196.9989, 475.5002)
basemodel:setScaleX(0.6000)
basemodel:setScaleY(0.6000)
if callBackProvider~=nil then
      basemodel:addClickEventListener(callBackProvider("main_0.lua", basemodel, "onBaseModel"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(basemodel)
layout:setPositionPercentX(0.2736)
layout:setPositionPercentY(0.3715)
layout:setPercentWidth(0.5736)
layout:setPercentHeight(0.1148)
layout:setSize({width = 413.0000, height = 147.0000})
layout:setLeftMargin(-9.5011)
layout:setRightMargin(316.5011)
layout:setTopMargin(730.9998)
layout:setBottomMargin(402.0002)
Layer:addChild(basemodel)

--Create upmodel
local upmodel = ccui.Button:create()
upmodel:ignoreContentAdaptWithSize(false)
upmodel:loadTextureNormal("game/niuniutiaozhan/images/btns/upmodel.png",0)
upmodel:setTitleFontSize(14)
upmodel:setTitleColor({r = 65, g = 65, b = 70})
upmodel:setScale9Enabled(true)
upmodel:setCapInsets({x = 15, y = 11, width = 383, height = 125})
upmodel:setLayoutComponentEnabled(true)
upmodel:setName("upmodel")
upmodel:setTag(6)
upmodel:setCascadeColorEnabled(true)
upmodel:setCascadeOpacityEnabled(true)
upmodel:setPosition(539.9929, 475.5002)
upmodel:setScaleX(0.6000)
upmodel:setScaleY(0.6000)
if callBackProvider~=nil then
      upmodel:addClickEventListener(callBackProvider("main_0.lua", upmodel, "onUpModel"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(upmodel)
layout:setPositionPercentX(0.7500)
layout:setPositionPercentY(0.3715)
layout:setPercentWidth(0.5736)
layout:setPercentHeight(0.1148)
layout:setSize({width = 413.0000, height = 147.0000})
layout:setLeftMargin(333.4929)
layout:setRightMargin(-26.4929)
layout:setTopMargin(730.9998)
layout:setBottomMargin(402.0002)
Layer:addChild(upmodel)

--Create img_bestScore
local img_bestScore = ccui.ImageView:create()
img_bestScore:ignoreContentAdaptWithSize(false)
img_bestScore:loadTexture("game/niuniutiaozhan/images/img_txts/historyMax.png",0)
img_bestScore:setLayoutComponentEnabled(true)
img_bestScore:setName("img_bestScore")
img_bestScore:setTag(4)
img_bestScore:setCascadeColorEnabled(true)
img_bestScore:setCascadeOpacityEnabled(true)
img_bestScore:setAnchorPoint(1.0000, 0.5000)
img_bestScore:setPosition(464.8486, 101.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bestScore)
layout:setPositionPercentX(0.6456)
layout:setPositionPercentY(0.0789)
layout:setPercentWidth(0.5472)
layout:setPercentHeight(0.0742)
layout:setSize({width = 394.0000, height = 95.0000})
layout:setLeftMargin(70.8486)
layout:setRightMargin(255.1514)
layout:setTopMargin(1131.5000)
layout:setBottomMargin(53.5000)
Layer:addChild(img_bestScore)

--Create text_bestScore
local text_bestScore = ccui.Text:create()
text_bestScore:ignoreContentAdaptWithSize(true)
text_bestScore:setTextAreaSize({width = 0, height = 0})
text_bestScore:setFontSize(60)
text_bestScore:setString([[100]])
text_bestScore:setLayoutComponentEnabled(true)
text_bestScore:setName("text_bestScore")
text_bestScore:setTag(49)
text_bestScore:setCascadeColorEnabled(true)
text_bestScore:setCascadeOpacityEnabled(true)
text_bestScore:setAnchorPoint(0.0000, 0.5000)
text_bestScore:setPosition(469.0000, 101.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(text_bestScore)
layout:setPositionPercentX(0.6514)
layout:setPositionPercentY(0.0789)
layout:setPercentWidth(0.1403)
layout:setPercentHeight(0.0531)
layout:setSize({width = 101.0000, height = 68.0000})
layout:setLeftMargin(469.0000)
layout:setRightMargin(150.0000)
layout:setTopMargin(1145.0000)
layout:setBottomMargin(67.0000)
Layer:addChild(text_bestScore)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

