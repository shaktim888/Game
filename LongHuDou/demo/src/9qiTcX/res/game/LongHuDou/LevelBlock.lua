--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game/LongHuDou/images/level/level_on.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(20)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(75.2921, 72.9413)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setSize({width = 149.0000, height = 146.0000})
layout:setLeftMargin(0.7921)
layout:setRightMargin(-149.7921)
layout:setTopMargin(-145.9413)
layout:setBottomMargin(-0.0587)
Node:addChild(bg)

--Create text
local text = ccui.Text:create()
text:ignoreContentAdaptWithSize(true)
text:setTextAreaSize({width = 0, height = 0})
text:setFontName("game/LongHuDou/images/font/fish.ttf")
text:setFontSize(35)
text:setString([[1]])
text:setLayoutComponentEnabled(true)
text:setName("text")
text:setTag(21)
text:setCascadeColorEnabled(true)
text:setCascadeOpacityEnabled(true)
text:setPosition(70.1140, 68.7429)
layout = ccui.LayoutComponent:bindLayoutComponent(text)
layout:setSize({width = 14.0000, height = 41.0000})
layout:setLeftMargin(63.1140)
layout:setRightMargin(-77.1140)
layout:setTopMargin(-89.2429)
layout:setBottomMargin(48.2429)
Node:addChild(text)

--Create btn
local btn = ccui.Button:create()
btn:ignoreContentAdaptWithSize(false)
btn:setTitleFontSize(14)
btn:setTitleColor({r = 65, g = 65, b = 70})
btn:setScale9Enabled(true)
btn:setCapInsets({x = -15, y = -6, width = 30, height = 12})
btn:setLayoutComponentEnabled(true)
btn:setName("btn")
btn:setTag(22)
btn:setCascadeColorEnabled(true)
btn:setCascadeOpacityEnabled(true)
btn:setPosition(74.9673, 72.5117)
layout = ccui.LayoutComponent:bindLayoutComponent(btn)
layout:setSize({width = 84.0000, height = 75.0000})
layout:setLeftMargin(32.9673)
layout:setRightMargin(-116.9673)
layout:setTopMargin(-110.0117)
layout:setBottomMargin(35.0117)
Node:addChild(btn)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

