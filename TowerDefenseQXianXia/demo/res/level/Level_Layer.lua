--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("level/bg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(779)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Layer:addChild(bg)

--Create img_tip_bg
local img_tip_bg = ccui.ImageView:create()
img_tip_bg:ignoreContentAdaptWithSize(false)
img_tip_bg:loadTexture("level/img_tip_bg.png",0)
img_tip_bg:setLayoutComponentEnabled(true)
img_tip_bg:setName("img_tip_bg")
img_tip_bg:setTag(66)
img_tip_bg:setCascadeColorEnabled(true)
img_tip_bg:setCascadeOpacityEnabled(true)
img_tip_bg:setPosition(596.0000, 419.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_tip_bg)
layout:setPositionPercentX(0.4656)
layout:setPositionPercentY(0.5819)
layout:setPercentWidth(0.6125)
layout:setPercentHeight(0.5000)
layout:setSize({width = 784.0000, height = 360.0000})
layout:setLeftMargin(204.0000)
layout:setRightMargin(292.0000)
layout:setTopMargin(121.0000)
layout:setBottomMargin(239.0000)
Layer:addChild(img_tip_bg)

--Create img_text
local img_text = ccui.ImageView:create()
img_text:ignoreContentAdaptWithSize(false)
img_text:loadTexture("level/img_text.png",0)
img_text:setLayoutComponentEnabled(true)
img_text:setName("img_text")
img_text:setTag(67)
img_text:setCascadeColorEnabled(true)
img_text:setCascadeOpacityEnabled(true)
img_text:setPosition(515.0000, 108.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_text)
layout:setPositionPercentX(0.6569)
layout:setPositionPercentY(0.3014)
layout:setPercentWidth(0.4031)
layout:setPercentHeight(0.2694)
layout:setSize({width = 316.0000, height = 97.0000})
layout:setLeftMargin(357.0000)
layout:setRightMargin(111.0000)
layout:setTopMargin(203.0000)
layout:setBottomMargin(60.0000)
img_tip_bg:addChild(img_text)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

