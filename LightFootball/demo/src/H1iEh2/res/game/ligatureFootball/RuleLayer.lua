--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 1280.0000})

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 0, g = 0, b = 0})
panel:setBackGroundColorOpacity(127)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(62)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 720.0000, height = 1280.0000})
Layer:addChild(panel)

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game/ligatureFootball/gameLayer/img_pop_bg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(58)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(360.0000, 640.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.9403)
layout:setPercentHeight(0.3469)
layout:setSize({width = 677.0000, height = 444.0000})
layout:setLeftMargin(21.5000)
layout:setRightMargin(21.5000)
layout:setTopMargin(418.0000)
layout:setBottomMargin(418.0000)
panel:addChild(bg)

--Create img_text_rule
local img_text_rule = ccui.ImageView:create()
img_text_rule:ignoreContentAdaptWithSize(false)
img_text_rule:loadTexture("game/ligatureFootball/gameLayer/img_text_rule.png",0)
img_text_rule:setLayoutComponentEnabled(true)
img_text_rule:setName("img_text_rule")
img_text_rule:setTag(77)
img_text_rule:setCascadeColorEnabled(true)
img_text_rule:setCascadeOpacityEnabled(true)
img_text_rule:setPosition(338.5000, 400.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_text_rule)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9009)
layout:setPercentWidth(0.1034)
layout:setPercentHeight(0.0856)
layout:setSize({width = 70.0000, height = 38.0000})
layout:setLeftMargin(303.5000)
layout:setRightMargin(303.5000)
layout:setTopMargin(25.0000)
layout:setBottomMargin(381.0000)
bg:addChild(img_text_rule)

--Create scrollView
local scrollView = ccui.ScrollView:create()
scrollView:setInnerContainerSize({width = 600, height = 1300})
scrollView:ignoreContentAdaptWithSize(false)
scrollView:setClippingEnabled(true)
scrollView:setBackGroundColorOpacity(102)
scrollView:setLayoutComponentEnabled(true)
scrollView:setName("scrollView")
scrollView:setTag(79)
scrollView:setCascadeColorEnabled(true)
scrollView:setCascadeOpacityEnabled(true)
scrollView:setPosition(38.5000, 38.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(scrollView)
layout:setPositionPercentX(0.0569)
layout:setPositionPercentY(0.0856)
layout:setPercentWidth(0.8863)
layout:setPercentHeight(0.7432)
layout:setSize({width = 600.0000, height = 330.0000})
layout:setLeftMargin(38.5000)
layout:setRightMargin(38.5000)
layout:setTopMargin(76.0000)
layout:setBottomMargin(38.0000)
bg:addChild(scrollView)

--Create text
local text = ccui.Text:create()
text:ignoreContentAdaptWithSize(false)
text:setFontName("game/ligatureFootball/font.ttf")
text:setFontSize(36)
text:setString([[Football connection is a kind of football passing and shooting game. In the game, every enemy player has a certain range of defense, and all the football passing through the range of defense will be intercepted by him. The player needs to find the most appropriate route through observation, and pass the football between the players to avoid the interception of the enemy players, and find the right time through the most forward players, avoid the goalkeeper's defense and shoot. In the game, with the advance of the level, in some levels, there are not only obstacles such as enemy players' blocking, but also obstacles such as walls and missiles. In addition to the transfer between players, players should use the transmission doors in some levels to avoid enemy players and obstacles. Come and experience the game.]])
text:setLayoutComponentEnabled(true)
text:setName("text")
text:setTag(60)
text:setCascadeColorEnabled(true)
text:setCascadeOpacityEnabled(true)
text:setAnchorPoint(0.0000, 1.0000)
text:setPosition(0.0000, 1300.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(text)
layout:setPositionPercentY(1.0000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 600.0000, height = 1300.0000})
scrollView:addChild(text)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

