--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create mask
local mask = ccui.Layout:create()
mask:ignoreContentAdaptWithSize(false)
mask:setClippingEnabled(false)
mask:setBackGroundColorType(1)
mask:setBackGroundColor({r = 0, g = 0, b = 0})
mask:setBackGroundColorOpacity(178)
mask:setTouchEnabled(true);
mask:setLayoutComponentEnabled(true)
mask:setName("mask")
mask:setTag(143)
mask:setCascadeColorEnabled(true)
mask:setCascadeOpacityEnabled(true)
mask:setAnchorPoint(0.5000, 0.5000)
mask:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(mask)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.5625)
layout:setPercentHeight(2.7778)
layout:setSize({width = 2000.0000, height = 2000.0000})
layout:setLeftMargin(-360.0000)
layout:setRightMargin(-360.0000)
layout:setTopMargin(-640.0000)
layout:setBottomMargin(-640.0000)
Layer:addChild(mask)

--Create Rule
local Rule = ccui.Layout:create()
Rule:ignoreContentAdaptWithSize(false)
Rule:setClippingEnabled(false)
Rule:setBackGroundColorOpacity(102)
Rule:setTouchEnabled(true);
Rule:setLayoutComponentEnabled(true)
Rule:setName("Rule")
Rule:setTag(79)
Rule:setCascadeColorEnabled(true)
Rule:setCascadeOpacityEnabled(true)
Rule:setPosition(377.0000, 86.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Rule)
layout:setPositionPercentX(0.2945)
layout:setPositionPercentY(0.1194)
layout:setPercentWidth(0.4125)
layout:setPercentHeight(0.7764)
layout:setSize({width = 528.0000, height = 559.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(377.0000)
layout:setRightMargin(375.0000)
layout:setTopMargin(75.0000)
layout:setBottomMargin(86.0000)
Layer:addChild(Rule)

--Create tc_4
local tc_4 = cc.Sprite:create("game/basketball/image/tc.png")
tc_4:setName("tc_4")
tc_4:setTag(144)
tc_4:setCascadeColorEnabled(true)
tc_4:setCascadeOpacityEnabled(true)
tc_4:setPosition(264.0000, 279.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(tc_4)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.1970)
layout:setPercentHeight(1.2021)
layout:setSize({width = 632.0000, height = 672.0000})
layout:setLeftMargin(-52.0000)
layout:setRightMargin(-52.0000)
layout:setTopMargin(-56.5000)
layout:setBottomMargin(-56.5000)
tc_4:setBlendFunc({src = 1, dst = 771})
Rule:addChild(tc_4)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(true)
Text_1:setTextAreaSize({width = 0, height = 0})
Text_1:setFontName("game/basketball/image/FZY3JW.TTF")
Text_1:setFontSize(48)
Text_1:setString([[RULE]])
Text_1:setTextHorizontalAlignment(1)
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("Text_1")
Text_1:setTag(80)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setPosition(264.0000, 475.0000)
Text_1:setTextColor({r = 144, g = 203, b = 144})
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.8497)
layout:setPercentWidth(0.2045)
layout:setPercentHeight(0.1002)
layout:setSize({width = 108.0000, height = 56.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(2)
layout:setLeftMargin(210.0000)
layout:setRightMargin(210.0000)
layout:setTopMargin(56.0000)
layout:setBottomMargin(447.0000)
Rule:addChild(Text_1)

--Create Text_2
local Text_2 = ccui.Text:create()
Text_2:ignoreContentAdaptWithSize(false)
Text_2:setFontName("game/basketball/image/FZY3JW.TTF")
Text_2:setFontSize(36)
Text_2:setString([[Slide the screen to let the basketball fly out and get a higher score as much as possible within the specifiedtime.
Node: Some interference will appear in the scene.

]])
Text_2:setLayoutComponentEnabled(true)
Text_2:setName("Text_2")
Text_2:setTag(81)
Text_2:setCascadeColorEnabled(true)
Text_2:setCascadeOpacityEnabled(true)
Text_2:setPosition(264.0000, 210.4988)
Text_2:setTextColor({r = 255, g = 165, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(Text_2)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.3766)
layout:setPercentWidth(0.9470)
layout:setPercentHeight(0.8050)
layout:setSize({width = 500.0000, height = 450.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(2)
layout:setLeftMargin(14.0000)
layout:setRightMargin(14.0000)
layout:setTopMargin(123.5012)
layout:setBottomMargin(-14.5012)
Rule:addChild(Text_2)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

