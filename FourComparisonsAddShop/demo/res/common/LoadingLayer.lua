--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1136.0000, height = 640.0000})

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("Default/ImageFile.png",0)
bg:setScale9Enabled(true)
bg:setCapInsets({x = -16, y = 21, width = 78, height = 4})
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(396)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(568.0000, 320.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.2324)
layout:setPercentHeight(0.1219)
layout:setSize({width = 264.0000, height = 78.0000})
layout:setLeftMargin(436.0000)
layout:setRightMargin(436.0000)
layout:setTopMargin(281.0000)
layout:setBottomMargin(281.0000)
Layer:addChild(bg)

--Create icon
local icon = ccui.ImageView:create()
icon:ignoreContentAdaptWithSize(false)
icon:loadTexture("Default/ImageFile.png",0)
icon:setLayoutComponentEnabled(true)
icon:setName("icon")
icon:setTag(397)
icon:setCascadeColorEnabled(true)
icon:setCascadeOpacityEnabled(true)
icon:setPosition(50.0000, 39.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(icon)
layout:setPositionPercentX(0.1894)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.1477)
layout:setPercentHeight(0.5000)
layout:setSize({width = 39.0000, height = 39.0000})
layout:setLeftMargin(30.5000)
layout:setRightMargin(194.5000)
layout:setTopMargin(19.5000)
layout:setBottomMargin(19.5000)
bg:addChild(icon)

--Create label
local label = ccui.Text:create()
label:ignoreContentAdaptWithSize(true)
label:setTextAreaSize({width = 0, height = 0})
label:setFontSize(28)
label:setString([[正在加载...]])
label:setLayoutComponentEnabled(true)
label:setName("label")
label:setTag(398)
label:setCascadeColorEnabled(true)
label:setCascadeOpacityEnabled(true)
label:setAnchorPoint(0.0000, 0.5000)
label:setPosition(80.0000, 39.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(label)
layout:setPositionPercentX(0.3030)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.5152)
layout:setPercentHeight(0.4103)
layout:setSize({width = 136.0000, height = 32.0000})
layout:setLeftMargin(80.0000)
layout:setRightMargin(48.0000)
layout:setTopMargin(23.0000)
layout:setBottomMargin(23.0000)
bg:addChild(label)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

