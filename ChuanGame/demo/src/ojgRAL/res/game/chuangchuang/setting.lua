--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 1280.0000})

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorOpacity(102)
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(89)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
Panel_1:setAnchorPoint(0.5000, 0.5000)
Panel_1:setPosition(367.9920, 817.0240)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setPositionPercentX(0.5111)
layout:setPositionPercentY(0.6383)
layout:setPercentWidth(0.5556)
layout:setPercentHeight(0.2344)
layout:setSize({width = 400.0000, height = 300.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(167.9920)
layout:setRightMargin(152.0080)
layout:setTopMargin(312.9760)
layout:setBottomMargin(667.0240)
Layer:addChild(Panel_1)

--Create PopBG_1
local PopBG_1 = cc.Sprite:create("game/chuangchuang/images/PopBG.png")
PopBG_1:setName("PopBG_1")
PopBG_1:setTag(36)
PopBG_1:setCascadeColorEnabled(true)
PopBG_1:setCascadeOpacityEnabled(true)
PopBG_1:setPosition(199.9985, 160.8120)
layout = ccui.LayoutComponent:bindLayoutComponent(PopBG_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5360)
layout:setPercentWidth(1.5175)
layout:setPercentHeight(1.2100)
layout:setSize({width = 607.0000, height = 363.0000})
layout:setLeftMargin(-103.5015)
layout:setRightMargin(-103.4985)
layout:setTopMargin(-42.3120)
layout:setBottomMargin(-20.6880)
PopBG_1:setBlendFunc({src = 1, dst = 771})
Panel_1:addChild(PopBG_1)

--Create Slider_Music
local Slider_Music = ccui.Slider:create()
Slider_Music:ignoreContentAdaptWithSize(false)
Slider_Music:loadBarTexture("game/chuangchuang/images/loadingbar2.png",0)
Slider_Music:loadProgressBarTexture("game/chuangchuang/images/loadingbar.png",0)
Slider_Music:loadSlidBallTextureNormal("game/chuangchuang/images/loadingbarBall.png",0)
Slider_Music:loadSlidBallTexturePressed("game/chuangchuang/images/loadingbarBall.png",0)
Slider_Music:loadSlidBallTextureDisabled("Default/SliderNode_Disable.png",0)
Slider_Music:setPercent(52)
Slider_Music:setLayoutComponentEnabled(true)
Slider_Music:setName("Slider_Music")
Slider_Music:setTag(85)
Slider_Music:setCascadeColorEnabled(true)
Slider_Music:setCascadeOpacityEnabled(true)
Slider_Music:setPosition(202.0000, 193.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Slider_Music)
layout:setPositionPercentX(0.5050)
layout:setPositionPercentY(0.6433)
layout:setPercentWidth(0.8675)
layout:setPercentHeight(0.1600)
layout:setSize({width = 347.0000, height = 48.0000})
layout:setLeftMargin(28.5000)
layout:setRightMargin(24.5000)
layout:setTopMargin(83.0000)
layout:setBottomMargin(169.0000)
Panel_1:addChild(Slider_Music)

--Create Slider_Sound
local Slider_Sound = ccui.Slider:create()
Slider_Sound:ignoreContentAdaptWithSize(false)
Slider_Sound:loadBarTexture("game/chuangchuang/images/loadingbar2.png",0)
Slider_Sound:loadProgressBarTexture("game/chuangchuang/images/loadingbar.png",0)
Slider_Sound:loadSlidBallTextureNormal("game/chuangchuang/images/loadingbarBall.png",0)
Slider_Sound:loadSlidBallTexturePressed("game/chuangchuang/images/loadingbarBall.png",0)
Slider_Sound:loadSlidBallTextureDisabled("Default/SliderNode_Disable.png",0)
Slider_Sound:setPercent(52)
Slider_Sound:setLayoutComponentEnabled(true)
Slider_Sound:setName("Slider_Sound")
Slider_Sound:setTag(86)
Slider_Sound:setCascadeColorEnabled(true)
Slider_Sound:setCascadeOpacityEnabled(true)
Slider_Sound:setPosition(199.0000, 42.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Slider_Sound)
layout:setPositionPercentX(0.4975)
layout:setPositionPercentY(0.1400)
layout:setPercentWidth(0.8675)
layout:setPercentHeight(0.1600)
layout:setSize({width = 347.0000, height = 48.0000})
layout:setLeftMargin(25.5000)
layout:setRightMargin(27.5000)
layout:setTopMargin(234.0000)
layout:setBottomMargin(18.0000)
Panel_1:addChild(Slider_Sound)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(true)
Text_1:setTextAreaSize({width = 0, height = 0})
Text_1:setFontName("game/chuangchuang/images/hwxk.ttf")
Text_1:setFontSize(50)
Text_1:setString([[Music]])
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("Text_1")
Text_1:setTag(87)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setPosition(192.0125, 257.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.4800)
layout:setPositionPercentY(0.8567)
layout:setPercentWidth(0.2700)
layout:setPercentHeight(0.1833)
layout:setSize({width = 108.0000, height = 55.0000})
layout:setLeftMargin(138.0125)
layout:setRightMargin(153.9875)
layout:setTopMargin(15.5000)
layout:setBottomMargin(229.5000)
Panel_1:addChild(Text_1)

--Create Text_1_0
local Text_1_0 = ccui.Text:create()
Text_1_0:ignoreContentAdaptWithSize(true)
Text_1_0:setTextAreaSize({width = 0, height = 0})
Text_1_0:setFontName("game/chuangchuang/images/hwxk.ttf")
Text_1_0:setFontSize(50)
Text_1_0:setString([[Sound]])
Text_1_0:setLayoutComponentEnabled(true)
Text_1_0:setName("Text_1_0")
Text_1_0:setTag(88)
Text_1_0:setCascadeColorEnabled(true)
Text_1_0:setCascadeOpacityEnabled(true)
Text_1_0:setAnchorPoint(0.4409, 0.4669)
Text_1_0:setPosition(190.4243, 101.5445)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1_0)
layout:setPositionPercentX(0.4761)
layout:setPositionPercentY(0.3385)
layout:setPercentWidth(0.2800)
layout:setPercentHeight(0.1833)
layout:setSize({width = 112.0000, height = 55.0000})
layout:setLeftMargin(141.0435)
layout:setRightMargin(146.9565)
layout:setTopMargin(169.1350)
layout:setBottomMargin(75.8650)
Panel_1:addChild(Text_1_0)

--Create btnBack
local btnBack = ccui.Button:create()
btnBack:ignoreContentAdaptWithSize(false)
btnBack:loadTextureNormal("game/chuangchuang/images/fanhui.png",0)
btnBack:setTitleFontSize(14)
btnBack:setTitleColor({r = 65, g = 65, b = 70})
btnBack:setLayoutComponentEnabled(true)
btnBack:setName("btnBack")
btnBack:setTag(90)
btnBack:setCascadeColorEnabled(true)
btnBack:setCascadeOpacityEnabled(true)
btnBack:setPosition(62.3806, 1226.8660)
layout = ccui.LayoutComponent:bindLayoutComponent(btnBack)
layout:setPositionPercentX(0.0866)
layout:setPositionPercentY(0.9585)
layout:setPercentWidth(0.1139)
layout:setPercentHeight(0.0617)
layout:setSize({width = 82.0000, height = 79.0000})
layout:setHorizontalEdge(1)
layout:setVerticalEdge(2)
layout:setLeftMargin(21.3806)
layout:setRightMargin(616.6194)
layout:setTopMargin(13.6335)
layout:setBottomMargin(1187.3660)
Layer:addChild(btnBack)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

